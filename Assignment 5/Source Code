#Seth Dunfield, CompSci 101L, October 8th, 2021
import string
import math

def character_value(char : str) -> int:
    '''Returns 0 for A, 1 for B, etc.''' 
    value = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    for i in value:
        if i == char:
            return int(value.index(i))
        elif i != char:
            continue 
    
def get_check_digit(idnumber : str) -> int:
    '''Returns the check digit for the name and sid.''' 
    total = 0
    for x in idnumber:
        if idnumber.index(x) >= 0 and idnumber.index(x) < 5:
            num = (character_value(x) * (idnumber.index(x) + 1))
            total += num
        elif idnumber.index(x) == 5 or idnumber.index(x) == 6 or idnumber.index(x) == 7 or idnumber.index(x) == 8:
            num = (int(x) * (idnumber.index(x) + 1))
            total += num
        else:
            continue
    check_digit = total % 10
    return check_digit

def is_valid(idnumber : str) -> tuple:
    '''Returns 2 values bool and a string with errors if bool is False'''
    for i in idnumber:
        if idnumber.index(i) >= 0 and idnumber.index(i) < 5:
            if i.isalpha() == True:
                continue
            elif i.isalpha() == False:
                is_alphaError = print("The first 5 characters must A-Z, the invalid character is at", idnumber.index(i), "is", i)
                return (False, is_alphaError)
            else:
                continue
        if idnumber.index(i) == 5:
            if int(i) == 1 or int(i) == 2 or int(i) == 3:
                continue
            else:
                sixth_character_numError = print("The sixth character must be 1 2 or 3")
                return (False, sixth_character_numError)
        if idnumber.index(i) == 6:
            if int(i) == 1 or int(i) == 2 or int(i) == 3 or int(i) == 4:
                continue
            else:
                seventh_character_numError = print("The seventh character must be 1 2 3 or 4")
                return (False, seventh_character_numError)
        if idnumber.index(i) == 7:
            if int(i) >= 0 and int(i) < 10:
                continue
            else:
                is_correct_numError = print("The last 3 characters must be 0-9, the invalid character is at", idnumber.index(i), "is", i)
                return (False, is_correct_numError)
        if idnumber.index(i) == 8:
            if int(i) >= 0 and int(i) < 10:
                continue
            else:
                is_correct_numError = print("The last 3 characters must be 0-9, the invalid character is at", idnumber.index(i), "is", i)
                return (False, is_correct_numError)
        if idnumber.index(i) == 9:
            if int(i) >= 0 and int(i) < 10:
                continue
            else:
                is_correct_numError = print("The last 3 characters must be 0-9, the invalid character is at", idnumber.index(i), "is", i)
                return (False, is_correct_numError) 
    if len(idnumber) == 10:
        return True
    else:
        lenError = print("The length of the number given must be 10")
        return (False, lenError)

def verify_check_digit(idnumber : str) -> tuple:
    '''Returns True if the check digit is valid, False if not'''
    check_digit = str(get_check_digit(idnumber))
    i = idnumber[9]
    if check_digit == i:
        return True, None
    else:
        check_digitError = print("Check Digit", i, "does not match calculated value", check_digit)
        return (False, check_digitError)

def get_school(idnumber : str) -> str:
    '''Returns the school the 5th index or 6th character is for.'''
    if int(idnumber[5]) >= 0 and int(idnumber[5]) < 10:
        if int(idnumber[5]) == 1:
            return ("School of Computing and Engineering SCE")
        elif int(idnumber[5]) == 2:
            return ("School of Law")
        elif int(idnumber[5]) == 3:
            return ("College of Arts and Sciences")
        else:
            return ("Invalid School")
    else:
        return ("idnumber at index 5 needs to be a number between 0-9")

def get_grade(idnumber : str) -> str:
    '''Returns the grade for index 6'''
    if int(idnumber[6]) >= 0 and int(idnumber[6]) < 10:
        if int(idnumber[6]) == 1:
            return ("Freshman")
        elif int(idnumber[6]) == 2:
            return ("Sophomore")
        elif int(idnumber[6]) == 3:
            return ("Junior")
        elif int(idnumber[6]) == 4:
            return ("Senior")
        else:
            return ("Invalid Grade")
    else:
        return ("idnumber at index 6 needs to be a number between 0-9")

if __name__ == "__main__":

    print("{:^60}".format("Linda Hall"))
    print("{:^60}".format("Library Card Check"))
    print("="*60)

    while True:

        print()
        card_num = input("Enter Library Card. Hit Enter to Exit").upper().strip()
        if card_num == "":
            break
        result, error = verify_check_digit(card_num)
        if result == True:
            print("Library card is valid.")
            print("The card belongs to a student in {}".format(get_school(card_num)))
            print("The card belongs to a {}".format(get_grade(card_num)))
        else:
            print("Library card is invalid.")
            print(error)
